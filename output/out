<Keyword, int, 4:3>
<Identifier, N, 4:7>
<Delimiter, ;, 4:8>
<Keyword, scan, 5:3>
<Delimiter, (, 5:7>
<Identifier, N, 5:8>
<Delimiter, ), 5:9>
<Delimiter, ;, 5:10>
<Keyword, int, 9:3>
<Identifier, text, 9:7>
<Delimiter, [, 9:11>
<Number, 100, 9:12>
<Delimiter, ], 9:15>
<Delimiter, ;, 9:16>
<Keyword, int, 10:3>
<Identifier, k, 10:7>
<Monocular Operation, =, 10:9>
<Number, 0, 10:11>
<Delimiter, ;, 10:12>
<Keyword, while, 11:3>
<Delimiter, (, 11:8>
<Identifier, k, 11:9>
<Monocular Operation, <, 11:11>
<Identifier, N, 11:13>
<Delimiter, ), 11:14>
<Delimiter, {, 11:15>
<Keyword, scan, 12:5>
<Delimiter, (, 12:9>
<Identifier, text, 12:10>
<Delimiter, [, 12:14>
<Identifier, k, 12:15>
<Delimiter, ], 12:16>
<Delimiter, ), 12:17>
<Delimiter, ;, 12:18>
<Identifier, k, 13:5>
<Monocular Operation, =, 13:7>
<Identifier, k, 13:9>
<Monocular Operation, +, 13:11>
<Number, 1, 13:13>
<Delimiter, ;, 13:14>
<Delimiter, }, 14:3>
<Identifier, N, 16:3>
<Monocular Operation, =, 16:5>
<Number, 2, 16:7>
<Monocular Operation, *, 16:8>
<Identifier, N, 16:9>
<Monocular Operation, +, 16:11>
<Number, 1, 16:13>
<Delimiter, ;, 16:14>
<Keyword, int, 17:3>
<Identifier, L, 17:7>
<Delimiter, [, 17:8>
<Identifier, N, 17:9>
<Delimiter, ], 17:10>
<Delimiter, ;, 17:11>
<Identifier, L, 18:3>
<Delimiter, [, 18:4>
<Number, 0, 18:5>
<Delimiter, ], 18:6>
<Monocular Operation, =, 18:8>
<Number, 0, 18:10>
<Delimiter, ;, 18:11>
<Identifier, L, 19:3>
<Delimiter, [, 19:4>
<Number, 1, 19:5>
<Delimiter, ], 19:6>
<Monocular Operation, =, 19:8>
<Number, 1, 19:10>
<Delimiter, ;, 19:11>
<Keyword, int, 20:3>
<Identifier, C, 20:7>
<Monocular Operation, =, 20:9>
<Number, 1, 20:11>
<Delimiter, ;, 20:12>
<Keyword, int, 21:3>
<Identifier, R, 21:7>
<Monocular Operation, =, 21:9>
<Number, 2, 21:11>
<Delimiter, ;, 21:12>
<Keyword, int, 22:3>
<Identifier, i, 22:7>
<Monocular Operation, =, 22:9>
<Number, 0, 22:11>
<Delimiter, ;, 22:12>
<Keyword, int, 23:3>
<Identifier, iMirror, 23:7>
<Delimiter, ;, 23:14>
<Keyword, int, 24:3>
<Identifier, maxLPSLength, 24:7>
<Monocular Operation, =, 24:20>
<Number, 0, 24:22>
<Delimiter, ;, 24:23>
<Keyword, int, 25:3>
<Identifier, maxLPSCenterPosition, 25:7>
<Monocular Operation, =, 25:28>
<Number, 0, 25:30>
<Delimiter, ;, 25:31>
<Keyword, int, 26:3>
<Identifier, start, 26:7>
<Monocular Operation, =, 26:13>
<Number, -1, 26:15>
<Delimiter, ;, 26:17>
<Keyword, int, 27:3>
<Identifier, end, 27:7>
<Monocular Operation, =, 27:11>
<Number, -1, 27:13>
<Delimiter, ;, 27:15>
<Keyword, int, 28:3>
<Identifier, diff, 28:7>
<Monocular Operation, =, 28:12>
<Number, -1, 28:14>
<Delimiter, ;, 28:16>
<Identifier, i, 32:5>
<Monocular Operation, =, 32:7>
<Number, 2, 32:9>
<Delimiter, ;, 32:10>
<Keyword, while, 33:1>
<Delimiter, (, 33:6>
<Identifier, i, 33:7>
<Monocular Operation, <, 33:9>
<Identifier, N, 33:11>
<Delimiter, ), 33:12>
<Delimiter, {, 34:5>
<Identifier, iMirror, 36:7>
<Monocular Operation, =, 36:16>
<Number, 2, 36:18>
<Monocular Operation, *, 36:19>
<Identifier, C, 36:20>
<Monocular Operation, -, 36:21>
<Identifier, i, 36:22>
<Delimiter, ;, 36:23>
<Identifier, L, 37:7>
<Delimiter, [, 37:8>
<Identifier, i, 37:9>
<Delimiter, ], 37:10>
<Monocular Operation, =, 37:12>
<Number, 0, 37:14>
<Delimiter, ;, 37:15>
<Identifier, diff, 38:7>
<Monocular Operation, =, 38:12>
<Identifier, R, 38:14>
<Monocular Operation, -, 38:16>
<Identifier, i, 38:18>
<Delimiter, ;, 38:19>
<Keyword, if, 40:7>
<Delimiter, (, 40:9>
<Identifier, diff, 40:10>
<Monocular Operation, >, 40:15>
<Number, 0, 40:17>
<Delimiter, ), 40:18>
<Delimiter, {, 40:19>
<Keyword, if, 41:9>
<Delimiter, (, 41:11>
<Identifier, L, 41:12>
<Delimiter, [, 41:13>
<Identifier, iMirror, 41:14>
<Delimiter, ], 41:21>
<Monocular Operation, >, 41:23>
<Identifier, diff, 41:25>
<Delimiter, ), 41:29>
<Delimiter, {, 41:30>
<Identifier, L, 42:11>
<Delimiter, [, 42:12>
<Identifier, i, 42:13>
<Delimiter, ], 42:14>
<Monocular Operation, =, 42:16>
<Identifier, diff, 42:18>
<Delimiter, ;, 42:22>
<Delimiter, }, 42:23>
<Keyword, else, 43:9>
<Delimiter, {, 43:14>
<Identifier, L, 43:15>
<Delimiter, [, 43:16>
<Identifier, i, 43:17>
<Delimiter, ], 43:18>
<Monocular Operation, =, 43:20>
<Identifier, L, 43:22>
<Delimiter, [, 43:23>
<Identifier, iMirror, 43:24>
<Delimiter, ], 43:31>
<Delimiter, ;, 43:32>
<Delimiter, }, 43:33>
<Delimiter, }, 44:9>
<Keyword, while, 50:7>
<Delimiter, (, 50:13>
<Delimiter, (, 50:15>
<Delimiter, (, 50:16>
<Identifier, i, 50:17>
<Monocular Operation, +, 50:19>
<Identifier, L, 50:21>
<Delimiter, [, 50:22>
<Identifier, i, 50:23>
<Delimiter, ], 50:24>
<Delimiter, ), 50:25>
<Monocular Operation, <, 50:27>
<Identifier, N, 50:29>
<Binocular Operation, &&, 50:31>
<Delimiter, (, 50:34>
<Identifier, i, 50:35>
<Monocular Operation, -, 50:37>
<Identifier, L, 50:39>
<Delimiter, [, 50:40>
<Identifier, i, 50:41>
<Delimiter, ], 50:42>
<Delimiter, ), 50:43>
<Monocular Operation, >, 50:45>
<Number, 0, 50:47>
<Delimiter, ), 50:48>
<Binocular Operation, &&, 50:50>
<Delimiter, (, 51:15>
<Delimiter, (, 51:17>
<Delimiter, (, 51:18>
<Identifier, i, 51:19>
<Monocular Operation, +, 51:21>
<Identifier, L, 51:23>
<Delimiter, [, 51:24>
<Identifier, i, 51:25>
<Delimiter, ], 51:26>
<Monocular Operation, +, 51:28>
<Number, 1, 51:30>
<Delimiter, ), 51:31>
<Monocular Operation, -, 51:33>
<Delimiter, (, 51:35>
<Identifier, i, 51:36>
<Monocular Operation, +, 51:38>
<Identifier, L, 51:40>
<Delimiter, [, 51:41>
<Identifier, i, 51:42>
<Delimiter, ], 51:43>
<Monocular Operation, +, 51:45>
<Number, 1, 51:47>
<Delimiter, ), 51:48>
<Monocular Operation, /, 51:50>
<Number, 2, 51:52>
<Monocular Operation, *, 51:54>
<Number, 2, 51:56>
<Binocular Operation, ==, 51:58>
<Number, 0, 51:61>
<Delimiter, ), 51:62>
<Binocular Operation, ||, 51:64>
<Delimiter, (, 52:17>
<Identifier, text, 52:18>
<Delimiter, [, 52:22>
<Delimiter, (, 52:23>
<Identifier, i, 52:24>
<Monocular Operation, +, 52:26>
<Identifier, L, 52:28>
<Delimiter, [, 52:29>
<Identifier, i, 52:30>
<Delimiter, ], 52:31>
<Monocular Operation, +, 52:33>
<Number, 1, 52:35>
<Delimiter, ), 52:36>
<Monocular Operation, /, 52:37>
<Number, 2, 52:38>
<Delimiter, ], 52:39>
<Binocular Operation, ==, 52:41>
<Identifier, text, 52:44>
<Delimiter, [, 52:48>
<Delimiter, (, 52:49>
<Identifier, i, 52:50>
<Monocular Operation, -, 52:52>
<Identifier, L, 52:54>
<Delimiter, [, 52:55>
<Identifier, i, 52:56>
<Delimiter, ], 52:57>
<Monocular Operation, -, 52:59>
<Number, 1, 52:61>
<Delimiter, ), 52:62>
<Monocular Operation, /, 52:63>
<Number, 2, 52:64>
<Delimiter, ], 52:65>
<Delimiter, ), 52:67>
<Delimiter, ), 52:68>
<Delimiter, ), 52:69>
<Delimiter, {, 53:9>
<Identifier, L, 54:11>
<Delimiter, [, 54:12>
<Identifier, i, 54:13>
<Delimiter, ], 54:14>
<Monocular Operation, =, 54:16>
<Identifier, L, 54:18>
<Delimiter, [, 54:19>
<Identifier, i, 54:20>
<Delimiter, ], 54:21>
<Monocular Operation, +, 54:23>
<Number, 1, 54:24>
<Delimiter, ;, 54:25>
<Delimiter, }, 55:9>
<Keyword, if, 57:7>
<Delimiter, (, 57:9>
<Identifier, L, 57:10>
<Delimiter, [, 57:11>
<Identifier, i, 57:12>
<Delimiter, ], 57:13>
<Monocular Operation, >, 57:15>
<Identifier, maxLPSLength, 57:17>
<Delimiter, ), 57:29>
<Delimiter, {, 58:9>
<Identifier, maxLPSLength, 59:11>
<Monocular Operation, =, 59:24>
<Identifier, L, 59:26>
<Delimiter, [, 59:27>
<Identifier, i, 59:28>
<Delimiter, ], 59:29>
<Delimiter, ;, 59:30>
<Identifier, maxLPSCenterPosition, 60:11>
<Monocular Operation, =, 60:32>
<Identifier, i, 60:34>
<Delimiter, ;, 60:35>
<Delimiter, }, 61:9>
<Keyword, if, 66:7>
<Delimiter, (, 66:10>
<Identifier, i, 66:11>
<Monocular Operation, +, 66:13>
<Identifier, L, 66:15>
<Delimiter, [, 66:16>
<Identifier, i, 66:17>
<Delimiter, ], 66:18>
<Monocular Operation, >, 66:20>
<Identifier, R, 66:22>
<Delimiter, ), 66:23>
<Delimiter, {, 67:9>
<Identifier, C, 68:11>
<Monocular Operation, =, 68:13>
<Identifier, i, 68:15>
<Delimiter, ;, 68:16>
<Identifier, R, 69:11>
<Monocular Operation, =, 69:13>
<Identifier, i, 69:15>
<Monocular Operation, +, 69:17>
<Identifier, L, 69:19>
<Delimiter, [, 69:20>
<Identifier, i, 69:21>
<Delimiter, ], 69:22>
<Delimiter, ;, 69:23>
<Delimiter, }, 70:9>
<Identifier, i, 71:7>
<Monocular Operation, =, 71:9>
<Identifier, i, 71:11>
<Monocular Operation, +, 71:13>
<Number, 1, 71:15>
<Delimiter, ;, 71:16>
<Delimiter, }, 74:5>
<Identifier, start, 76:3>
<Monocular Operation, =, 76:9>
<Delimiter, (, 76:11>
<Identifier, maxLPSCenterPosition, 76:12>
<Monocular Operation, -, 76:33>
<Identifier, maxLPSLength, 76:35>
<Delimiter, ), 76:47>
<Monocular Operation, /, 76:48>
<Number, 2, 76:49>
<Delimiter, ;, 76:50>
<Identifier, end, 77:3>
<Monocular Operation, =, 77:7>
<Identifier, start, 77:9>
<Monocular Operation, +, 77:15>
<Identifier, maxLPSLength, 77:17>
<Monocular Operation, -, 77:30>
<Number, 1, 77:32>
<Delimiter, ;, 77:33>
<Identifier, i, 79:1>
<Monocular Operation, =, 79:3>
<Identifier, start, 79:5>
<Delimiter, ;, 79:10>
<Keyword, while, 80:1>
<Delimiter, (, 80:6>
<Identifier, i, 80:7>
<Binocular Operation, <=, 80:9>
<Identifier, end, 80:12>
<Delimiter, ), 80:15>
<Delimiter, {, 80:16>
<Keyword, print, 81:3>
<Delimiter, (, 81:8>
<Identifier, text, 81:9>
<Delimiter, [, 81:13>
<Identifier, i, 81:14>
<Delimiter, ], 81:15>
<Delimiter, ), 81:16>
<Delimiter, ;, 81:17>
<Identifier, i, 82:3>
<Monocular Operation, =, 82:5>
<Identifier, i, 82:7>
<Monocular Operation, +, 82:9>
<Number, 1, 82:11>
<Delimiter, ;, 82:12>
<Delimiter, }, 83:2>
