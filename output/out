<Keyword, int, 1:1>
<Identifier, x, 1:5>
<Delimiter, [, 1:6>
<Number, 25, 1:7>
<Delimiter, ], 1:9>
<Monocular Operation, =, 1:11>
<Delimiter, {, 1:13>
<Number, 5, 1:14>
<Delimiter, }, 1:15>
<Delimiter, ;, 1:16>
<Keyword, while, 2:1>
<Delimiter, (, 2:6>
<Number, -1, 2:7>
<Monocular Operation, +, 2:9>
<Number, 2, 2:10>
<Monocular Operation, *, 2:11>
<Number, 3, 2:12>
<Monocular Operation, /, 2:13>
<Delimiter, (, 2:14>
<Number, 4, 2:15>
<Monocular Operation, -, 2:16>
<Number, 3, 2:17>
<Delimiter, ), 2:18>
<Monocular Operation, +, 2:19>
<Delimiter, (, 2:20>
<Number, +3, 2:21>
<Delimiter, ), 2:23>
<Monocular Operation, -, 2:24>
<Delimiter, (, 2:25>
<Number, -2, 2:26>
<Delimiter, ), 2:28>
<Monocular Operation, /, 2:29>
<Delimiter, (, 2:30>
<Number, 4, 2:31>
<Monocular Operation, *, 2:33>
<Number, 4, 2:35>
<Monocular Operation, +, 2:37>
<Number, 2, 2:39>
<Delimiter, ), 2:40>
<Monocular Operation, /, 2:41>
<Delimiter, (, 2:42>
<Number, 4, 2:43>
<Monocular Operation, /, 2:44>
<Number, 4, 2:45>
<Monocular Operation, *, 2:46>
<Number, 3, 2:47>
<Delimiter, ), 2:48>
<Monocular Operation, /, 2:49>
<Number, 2.0, 2:50>
<Monocular Operation, >, 2:53>
<Number, 1000, 2:54>
<Delimiter, ), 2:58>
<Delimiter, {, 2:60>
<Keyword, if, 3:5>
<Delimiter, (, 3:7>
<Identifier, x, 3:8>
<Monocular Operation, >, 3:9>
<Number, 788, 3:10>
<Delimiter, ), 3:13>
<Delimiter, {, 3:15>
<Keyword, print, 4:9>
<Delimiter, (, 4:14>
<Identifier, x, 4:15>
<Delimiter, ), 4:16>
<Delimiter, ;, 4:17>
<Delimiter, }, 6:5>
<Keyword, else, 6:7>
<Delimiter, {, 6:11>
<Keyword, break, 7:5>
<Delimiter, ;, 7:10>
<Delimiter, }, 8:1>
<Delimiter, }, 9:1>
